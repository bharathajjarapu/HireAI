import nodemailer from 'nodemailer';

// Email configuration
const createTransporter = () => {
  return nodemailer.createTransporter({
    host: process.env.SMTP_HOST || 'smtp.gmail.com',
    port: parseInt(process.env.SMTP_PORT || '587'),
    secure: false, // true for 465, false for other ports
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });
};

export interface EmailOptions {
  to: string;
  subject: string;
  text?: string;
  html?: string;
}

export const sendEmail = async (options: EmailOptions): Promise<boolean> => {
  try {
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.warn('Email credentials not configured');
      return false;
    }

    const transporter = createTransporter();
    
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: options.to,
      subject: options.subject,
      text: options.text,
      html: options.html,
    };

    await transporter.sendMail(mailOptions);
    return true;
  } catch (error) {
    console.error('Error sending email:', error);
    return false;
  }
};

export const sendResumeAnalysisEmail = async (
  recipientEmail: string,
  candidateName: string,
  analysis: any
): Promise<boolean> => {
  const subject = `Resume Analysis for ${candidateName}`;
  
  const html = `
    <html>
      <body style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h1 style="color: #333; border-bottom: 2px solid #007bff; padding-bottom: 10px;">
          Resume Analysis Report
        </h1>
        
        <h2 style="color: #007bff;">Candidate: ${candidateName}</h2>
        
        <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
          <h3 style="color: #28a745; margin-top: 0;">Summary</h3>
          <p>${analysis.summary || 'No summary available'}</p>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Technical Skills</h3>
          <ul>
            ${analysis.skills?.map((skill: string) => `<li>${skill}</li>`).join('') || '<li>No skills listed</li>'}
          </ul>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Experience</h3>
          <p>${analysis.experience || 'No experience information available'}</p>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Education</h3>
          <p>${analysis.education || 'No education information available'}</p>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Technical Proficiency</h3>
          <div style="margin-left: 20px;">
            <strong>Languages:</strong> ${analysis.technical_proficiency?.languages?.join(', ') || 'None listed'}<br>
            <strong>Frameworks:</strong> ${analysis.technical_proficiency?.frameworks?.join(', ') || 'None listed'}<br>
            <strong>Tools:</strong> ${analysis.technical_proficiency?.tools?.join(', ') || 'None listed'}
          </div>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Key Achievements</h3>
          <ul>
            ${analysis.achievements?.map((achievement: string) => `<li>${achievement}</li>`).join('') || '<li>No achievements listed</li>'}
          </ul>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #28a745;">Strengths</h3>
          <ul>
            ${analysis.pros?.map((pro: string) => `<li style="color: #28a745;">${pro}</li>`).join('') || '<li>No strengths identified</li>'}
          </ul>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #dc3545;">Areas for Improvement</h3>
          <ul>
            ${analysis.cons?.map((con: string) => `<li style="color: #dc3545;">${con}</li>`).join('') || '<li>No improvement areas identified</li>'}
          </ul>
        </div>

        <div style="margin: 20px 0;">
          <h3 style="color: #333;">Suitable Roles</h3>
          <ul>
            ${analysis.role_matches?.map((role: string) => `<li>${role}</li>`).join('') || '<li>No role matches identified</li>'}
          </ul>
        </div>

        <hr style="margin: 30px 0;">
        <p style="color: #666; font-size: 12px;">
          This analysis was generated by HireAI Resume Parser. 
          Report generated on ${new Date().toLocaleDateString()}.
        </p>
      </body>
    </html>
  `;

  const text = `
Resume Analysis Report for ${candidateName}

Summary: ${analysis.summary || 'No summary available'}

Skills: ${analysis.skills?.join(', ') || 'No skills listed'}
Experience: ${analysis.experience || 'No experience information available'}
Education: ${analysis.education || 'No education information available'}

Technical Proficiency:
- Languages: ${analysis.technical_proficiency?.languages?.join(', ') || 'None listed'}
- Frameworks: ${analysis.technical_proficiency?.frameworks?.join(', ') || 'None listed'}
- Tools: ${analysis.technical_proficiency?.tools?.join(', ') || 'None listed'}

Achievements: ${analysis.achievements?.join(', ') || 'No achievements listed'}
Strengths: ${analysis.pros?.join(', ') || 'No strengths identified'}
Areas for Improvement: ${analysis.cons?.join(', ') || 'No improvement areas identified'}
Suitable Roles: ${analysis.role_matches?.join(', ') || 'No role matches identified'}

Report generated on ${new Date().toLocaleDateString()}.
  `;

  return sendEmail({
    to: recipientEmail,
    subject,
    text,
    html,
  });
}; 